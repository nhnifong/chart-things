# set base image (host OS)
FROM python:3.8

ENV DEBIAN_FRONTEND noninteractive
ENV GECKODRIVER_VER v0.31.0
ENV FIREFOX_VER 98.0

# set the working directory in the container
WORKDIR /code

RUN set -x \
   && apt update \
   && apt upgrade -y \
   && apt install -y \
       firefox-esr

RUN apt-get update && apt-get install -y wget bzip2 libxtst6 packagekit-gtk3-module libx11-xcb-dev libdbus-glib-1-2 libxt6 libpci-dev libasound2 && rm -rf /var/lib/apt/lists/*

# Add latest FireFox
RUN set -x \
   && apt install -y \
    libx11-xcb1 \
    libdbus-glib-1-2 \
   && curl -sSLO https://download-installer.cdn.mozilla.net/pub/firefox/releases/${FIREFOX_VER}/linux-x86_64/en-US/firefox-${FIREFOX_VER}.tar.bz2 \
   && tar -jxf firefox-* \
   && mv firefox /opt/ \
   && chmod 755 /opt/firefox \
   && chmod 755 /opt/firefox/firefox
  
# Add geckodriver
RUN set -x \
   && curl -sSLO https://github.com/mozilla/geckodriver/releases/download/${GECKODRIVER_VER}/geckodriver-${GECKODRIVER_VER}-linux64.tar.gz \
   && tar zxf geckodriver-*.tar.gz \
   && mv geckodriver /usr/bin/

# Install dependencies from shared code
COPY shared/requirements.txt .
RUN pip install -r requirements.txt

# copy shared code

COPY shared/src/ .

# -----------------------------------------------------------------------------------------

# Install dependencies from container-specific code
COPY scrape_worker/requirements.txt .
RUN pip install -r requirements.txt

# copy the content of the src directory to the working directory
COPY scrape_worker/src/ .

# command to run on container start
CMD [ "python", "./worker.py" ] 